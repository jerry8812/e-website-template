{"version":3,"sources":["constants.js","components/product/ProductListing.js","components/product/Filter.js","components/common/DropDown.js","pages/Product.js"],"names":["DROPDOWN_LIST","ProductListing","className","Filter","props","dispatch","useDispatch","categories","useSelector","state","allCategories","productType","map","category","index","onClick","setProductType","DropDown","dropDownRef","React","createRef","useState","sortByitem","setSortByItem","current","classList","toggle","ref","dropDownList","item","onChange","itemClick","Product","products","allProducts","useEffect","url","fetchProducts","length","data"],"mappings":"yMAAaA,EAAgB,CAAC,aAAc,eAC1C,oBAAqB,oBACrB,sBAAuB,uB,OCAV,SAASC,IACtB,OACE,qBAAKC,UAAU,yBAAf,4B,YCCW,SAASC,EAAOC,GAC7B,IAAMC,EAAWC,cACXC,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,cAAcH,cACtDI,EAAcH,aAAY,SAAAC,GAAK,OAAIA,EAAME,YAAYA,eAC3D,OACE,sBAAKT,UAAU,6BAAf,UACE,yCACA,oBAAIA,UAAU,SAAd,SACGK,EAAWK,KAAI,SAACC,EAAUC,GACzB,OACE,oBACEZ,UAAWS,IAAgBE,EAAW,SAAW,GACjDE,QAAS,kBAAIV,EAASW,YAAeH,KAFvC,SAGEA,GAHOC,W,YCbN,SAASG,EAASb,GAC/B,IAAMc,EAAcC,IAAMC,YAC1B,EAAoCC,mBAAS,WAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAwBA,OACE,sBAAKR,QAAS,WAvBdG,EAAYM,QAAQC,UAAUC,OAAO,uBAuBAxB,UAAU,iBAA/C,UACE,4BAAIoB,IACJ,oBAAIpB,UAAU,gBAAgByB,IAAKT,EAAnC,SACGd,EAAMwB,aAAahB,KAAI,SAACiB,EAAMf,GAC7B,OAAO,oBAAgBC,QAAS,kBAzBtB,SAACc,GACjBN,EAAcM,GACdzB,EAAM0B,SAASD,GAuB6BE,CAAUF,IAAzC,SACJA,GADaf,WCvBX,SAASkB,IACtB,IAAM3B,EAAWC,cACX2B,EAAWzB,aAAY,SAAAC,GAAK,OAAIA,EAAMyB,YAAYD,YAClDtB,EAAcH,aAAY,SAAAC,GAAK,OAAIA,EAAME,YAAYA,eAS3D,OALAwB,qBAAU,WACR,IAAMC,EAAsB,QAAhBzB,EAAwB,YAAxB,6BAA4DA,GACxEN,EAASgC,YAAcD,MACtB,CAAC/B,EAAUM,IAGZ,sBAAKT,UAAU,eAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,6BAAKS,MAEP,sBAAKT,UAAU,mBAAf,UACE,8BAAI+B,EAASK,OAAb,kBACA,cAACrB,EAAD,CACEa,SAfkB,SAAAS,GAAI,OAAIA,GAgB1BX,aAAc5B,OAGlB,sBAAKE,UAAU,0BAAf,UACE,cAACC,EAAD,CAAQU,SAAUF,IAClB,cAACV,EAAD,CAAgBgC,SAAUA","file":"static/js/5.2c146d61.chunk.js","sourcesContent":["export const DROPDOWN_LIST = ['Populirity', 'New Arrivals'\r\n, 'Price High to Low', 'Price Low to High'\r\n, 'Alphabetically, A-Z', 'Alphabetically, Z-A'\r\n]\r\n","import React from 'react'\r\n\r\nexport default function ProductListing() {\r\n  return (\r\n    <div className=\"product-productlisting\">\r\n      ProductListing\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setProductType } from '../../redux/actions/productActions'\r\n\r\nexport default function Filter(props) {\r\n  const dispatch = useDispatch()\r\n  const categories = useSelector(state => state.allCategories.categories)\r\n  const productType = useSelector(state => state.productType.productType)\r\n  return (\r\n    <div className=\"product-filter header_font\">\r\n      <p>Category</p>\r\n      <ul className=\"subnav\">\r\n        {categories.map((category, index) => {\r\n          return (\r\n            <li key={index}\r\n              className={productType === category ? 'active' : ''}\r\n              onClick={()=>dispatch(setProductType(category))}\r\n            >{category}</li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function DropDown(props) {\r\n  const dropDownRef = React.createRef()\r\n  const [sortByitem, setSortByItem] = useState('Sort By')\r\n  const showDropDowns = () => {\r\n    dropDownRef.current.classList.toggle('sort-by-items-show')\r\n  }\r\n  const itemClick = (item) => {\r\n    setSortByItem(item)\r\n    props.onChange(item)\r\n  }\r\n  // useEffect(() => {\r\n  //   document.addEventListener('click', ()=>handleDocumentClick())\r\n  //   return () => {\r\n  //     document.removeEventListener('click', ()=>handleDocumentClick())\r\n  //   }\r\n  // }, [])\r\n  // const handleDocumentClick = (e) => {\r\n  //   if (!dropDownRef.current) {\r\n  //     console.log(\"111111\");\r\n  //     return\r\n  //   }\r\n  //   if(!dropDownRef.current.contains(e.target) && dropDownRef.current!==e.target){\r\n  //     console.log('2222');\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div onClick={() => showDropDowns()} className=\"drop-down-list\">\r\n      <p>{sortByitem}</p>\r\n      <ul className=\"sort-by-items\" ref={dropDownRef}>\r\n        {props.dropDownList.map((item, index) => {\r\n          return <li key={index} onClick={() => itemClick(item)}>\r\n            {item}\r\n          </li>\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { DROPDOWN_LIST } from '../constants';\r\nimport ProductListing from '../components/product/ProductListing';\r\nimport Filter from '../components/product/Filter';\r\nimport DropDown from '../components/common/DropDown';\r\nimport { fetchProducts } from '../redux/actions/productActions'\r\n\r\nexport default function Product() {\r\n  const dispatch = useDispatch()\r\n  const products = useSelector(state => state.allProducts.products)\r\n  const productType = useSelector(state => state.productType.productType)\r\n\r\n  const sortByItemChanged = data => data\r\n\r\n  useEffect(() => {\r\n    const url = productType === 'all' ? '/products' : `/products/category/${productType}`\r\n    dispatch(fetchProducts(url))\r\n  }, [dispatch, productType])\r\n\r\n  return (\r\n    <div className=\"main-product\">\r\n      <div className=\"product-category\">\r\n        <h5>{productType}</h5>\r\n      </div>\r\n      <div className=\"products-sort-by\">\r\n        <p>{products.length} items found</p>\r\n        <DropDown\r\n          onChange={sortByItemChanged}\r\n          dropDownList={DROPDOWN_LIST}\r\n        />\r\n      </div>\r\n      <div className=\"product-filter-products\">\r\n        <Filter category={productType} />\r\n        <ProductListing products={products} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}